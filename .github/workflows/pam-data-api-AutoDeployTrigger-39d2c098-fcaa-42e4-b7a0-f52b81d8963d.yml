name: Trigger auto deployment for pam-data-api

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/pam-data-api-AutoDeployTrigger-39d2c098-fcaa-42e4-b7a0-f52b81d8963d.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.PAMDATAAPI_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.PAMDATAAPI_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.PAMDATAAPI_AZURE_SUBSCRIPTION_ID }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.PAMAPI_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Add .env
        env: 
          MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
          DB_NAME_ONCHAIN_DATA: ${{ secrets.DB_NAME_ONCHAIN_DATA }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXPIRE_MINUTES: ${{ secrets.JWT_SECRET_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          ETHERSCAN_API_URL: ${{ secrets.ETHERSCAN_API_KEY }}
          CORS_ORIGINS: ${{ secrets.ETHERSCAN_API_KEY }}
        run: |
          echo "MONGO_CONNECTION_STRING=$MONGO_CONNECTION_STRING\nDB_NAME_ONCHAIN_DATA=$DB_NAME_ONCHAIN_DATA\nJWT_SECRET_KEY=$JWT_SECRET_KEY\nJWT_EXPIRE_MINUTES=$JWT_EXPIRE_MINUTES\nETHERSCAN_API_KEY=$ETHERSCAN_API_KEY\nETHERSCAN_API_URL=$ETHERSCAN_API_URL\nCORS_ORIGINS=$CORS_ORIGINS" > .env
          ls -la

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}
          _dockerfilePathKey_: ./Dockerfile-azure
          registryUrl: docker.io
          registryUsername: ${{ secrets.PAMAPI_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.DOCKER_PAT }}
          containerAppName: pam-data-api
          resourceGroup: pam-apis
          imageToBuild: generaliroh/general-project-repo:pam_data_api
          _buildArgumentsKey_: |
            _buildArgumentsValues_


